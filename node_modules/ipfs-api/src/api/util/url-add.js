'use strict';

var promisify = require('promisify-es6');
var once = require('once');
var parseUrl = require('url').parse;
var request = require('../../request');
var DAGNodeStream = require('../../dagnode-stream');

module.exports = function (send) {
  return promisify(function (url, opts, callback) {
    if (typeof opts === 'function' && callback === undefined) {
      callback = opts;
      opts = {};
    }

    // opts is the real callback --
    // 'callback' is being injected by promisify
    if (typeof opts === 'function' && typeof callback === 'function') {
      callback = opts;
      opts = {};
    }

    if (typeof url !== 'string' || !url.startsWith('http')) {
      return callback(new Error('"url" param must be an http(s) url'));
    }

    callback = once(callback);

    request(parseUrl(url).protocol)(url, function (res) {
      res.once('error', callback);
      if (res.statusCode >= 400) {
        return callback(new Error('Failed to download with ' + res.statusCode));
      }

      var params = {
        path: 'add',
        qs: opts,
        files: res

        // Transform the response stream to DAGNode values
      };var transform = function transform(res, callback) {
        return DAGNodeStream.streamToValue(send, res, callback);
      };
      send.andTransform(params, transform, callback);
    }).end();
  });
};