'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var bs58 = require('bs58');
var isIPFS = require('is-ipfs');

module.exports = function (multihash) {
  if (Buffer.isBuffer(multihash)) {
    multihash = bs58.encode(multihash);
  }
  if (typeof multihash !== 'string') {
    throw new Error('unexpected multihash type: ' + (typeof multihash === 'undefined' ? 'undefined' : _typeof(multihash)));
  }
  if (!isIPFS.multihash(multihash.split('/')[0])) {
    throw new Error('not valid multihash');
  }
  return multihash;
};