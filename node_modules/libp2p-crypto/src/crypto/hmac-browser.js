'use strict';

var nodeify = require('nodeify');
var Buffer = require('safe-buffer').Buffer;

var crypto = require('./webcrypto')();
var lengths = require('./hmac-lengths');

var hashTypes = {
  SHA1: 'SHA-1',
  SHA256: 'SHA-256',
  SHA512: 'SHA-512'
};

exports.create = function (hashType, secret, callback) {
  var hash = hashTypes[hashType];

  nodeify(crypto.subtle.importKey('raw', secret, {
    name: 'HMAC',
    hash: { name: hash }
  }, false, ['sign']).then(function (key) {
    return {
      digest: function digest(data, cb) {
        nodeify(crypto.subtle.sign({ name: 'HMAC' }, key, data).then(function (raw) {
          return Buffer.from(raw);
        }), cb);
      },

      length: lengths[hashType]
    };
  }), callback);
};