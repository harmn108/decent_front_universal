'use strict';

var nacl = require('tweetnacl');
var setImmediate = require('async/setImmediate');
var Buffer = require('safe-buffer').Buffer;

exports.publicKeyLength = nacl.sign.publicKeyLength;
exports.privateKeyLength = nacl.sign.secretKeyLength;

exports.generateKey = function (callback) {
  var done = function done(err, res) {
    return setImmediate(function () {
      callback(err, res);
    });
  };

  var keys = void 0;
  try {
    keys = nacl.sign.keyPair();
  } catch (err) {
    done(err);
    return;
  }
  done(null, keys);
};

// seed should be a 32 byte uint8array
exports.generateKeyFromSeed = function (seed, callback) {
  var done = function done(err, res) {
    return setImmediate(function () {
      callback(err, res);
    });
  };

  var keys = void 0;
  try {
    keys = nacl.sign.keyPair.fromSeed(seed);
  } catch (err) {
    done(err);
    return;
  }
  done(null, keys);
};

exports.hashAndSign = function (key, msg, callback) {
  setImmediate(function () {
    callback(null, Buffer.from(nacl.sign.detached(msg, key)));
  });
};

exports.hashAndVerify = function (key, sig, msg, callback) {
  setImmediate(function () {
    callback(null, nacl.sign.detached.verify(msg, sig, key));
  });
};