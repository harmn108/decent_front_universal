'use strict';

var crypto = require('crypto');
var setImmediate = require('async/setImmediate');

var curves = {
  'P-256': 'prime256v1',
  'P-384': 'secp384r1',
  'P-521': 'secp521r1'
};

exports.generateEphmeralKeyPair = function (curve, callback) {
  if (!curves[curve]) {
    return callback(new Error('Unkown curve: ' + curve));
  }
  var ecdh = crypto.createECDH(curves[curve]);
  ecdh.generateKeys();

  setImmediate(function () {
    return callback(null, {
      key: ecdh.getPublicKey(),
      genSharedKey: function genSharedKey(theirPub, forcePrivate, cb) {
        if (typeof forcePrivate === 'function') {
          cb = forcePrivate;
          forcePrivate = null;
        }

        if (forcePrivate) {
          ecdh.setPrivateKey(forcePrivate.private);
        }

        var secret = void 0;
        try {
          secret = ecdh.computeSecret(theirPub);
        } catch (err) {
          return cb(err);
        }

        setImmediate(function () {
          return cb(null, secret);
        });
      }
    });
  });
};