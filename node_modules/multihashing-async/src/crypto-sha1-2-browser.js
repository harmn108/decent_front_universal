'use strict';

var nodeify = require('nodeify');

var webCrypto = getWebCrypto();

function getWebCrypto() {
  if (self.crypto) {
    return self.crypto.subtle || self.crypto.webkitSubtle;
  }

  if (self.msCrypto) {
    return self.msCrypto.subtle;
  }
}

function webCryptoHash(type) {
  if (!webCrypto) {
    throw new Error('Please use a browser with webcrypto support');
  }

  return function (data, callback) {
    var res = webCrypto.digest({ name: type }, data);

    if (typeof res.then !== 'function') {
      // IE11
      res.onerror = function () {
        callback('Error hashing data using ' + type);
      };
      res.oncomplete = function (e) {
        callback(null, e.target.result);
      };
      return;
    }

    nodeify(res.then(function (raw) {
      return new Buffer(new Uint8Array(raw));
    }), callback);
  };
}

function sha1(buf, callback) {
  webCryptoHash('SHA-1')(buf, callback);
}

function sha2256(buf, callback) {
  webCryptoHash('SHA-256')(buf, callback);
}

function sha2512(buf, callback) {
  webCryptoHash('SHA-512')(buf, callback);
}

module.exports = {
  sha1: sha1,
  sha2256: sha2256,
  sha2512: sha2512
};