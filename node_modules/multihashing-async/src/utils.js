'use strict';

var setImmediate = require('async/setImmediate');

exports.toCallback = function (doWork) {
  return function (input, callback) {
    var done = function done(err, res) {
      return setImmediate(function () {
        callback(err, res);
      });
    };

    var res = void 0;
    try {
      res = doWork(input);
    } catch (err) {
      done(err);
      return;
    }

    done(null, res);
  };
};

exports.toBuf = function (doWork, other) {
  return function (input) {
    var result = doWork(input, other);
    return new Buffer(result, 'hex');
  };
};

exports.fromString = function (doWork, other) {
  return function (_input) {
    var input = Buffer.isBuffer(_input) ? _input.toString() : _input;
    return doWork(input, other);
  };
};

exports.fromNumberTo32BitBuf = function (doWork, other) {
  return function (input) {
    var number = doWork(input, other);
    var bytes = new Array(4);

    for (var i = 0; i < 4; i++) {
      bytes[i] = number & 0xff;
      number = number >> 8;
    }

    return Buffer.from(bytes);
  };
};