'use strict';

var blake = require('blakejs');

var toCallback = require('./utils').toCallback;

var minB = 0xb201;
var minS = 0xb241;

var blake2b = {
  init: blake.blake2bInit,
  update: blake.blake2bUpdate,
  digest: blake.blake2bFinal
};

var blake2s = {
  init: blake.blake2sInit,
  update: blake.blake2sUpdate,
  digest: blake.blake2sFinal
};

var makeB2Hash = function makeB2Hash(size, hf) {
  return toCallback(function (buf) {
    var ctx = hf.init(size, null);
    hf.update(ctx, buf);
    return new Buffer(hf.digest(ctx));
  });
};

module.exports = function (table) {
  for (var i = 0; i < 64; i++) {
    table[minB + i] = makeB2Hash(i + 1, blake2b);
  }
  for (var _i = 0; _i < 32; _i++) {
    table[minS + _i] = makeB2Hash(_i + 1, blake2s);
  }
};