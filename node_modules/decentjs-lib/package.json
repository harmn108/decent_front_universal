{
  "_args": [
    [
      {
        "raw": "decentjs-lib@git+ssh://git@github.com/DECENTfoundation/decentjs-lib.git",
        "scope": null,
        "escapedName": "decentjs-lib",
        "name": "decentjs-lib",
        "rawSpec": "git+ssh://git@github.com/DECENTfoundation/decentjs-lib.git",
        "spec": "git+ssh://git@github.com/DECENTfoundation/decentjs-lib.git",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:DECENTfoundation/decentjs-lib.git",
          "sshUrl": "git+ssh://git@github.com/DECENTfoundation/decentjs-lib.git",
          "httpsUrl": "git+https://github.com/DECENTfoundation/decentjs-lib.git",
          "gitUrl": "git://github.com/DECENTfoundation/decentjs-lib.git",
          "shortcut": "github:DECENTfoundation/decentjs-lib",
          "directUrl": "https://raw.githubusercontent.com/DECENTfoundation/decentjs-lib/master/package.json"
        }
      },
      "/Users/admin/Documents/decentgo-frontend"
    ]
  ],
  "_from": "git+ssh://git@github.com/DECENTfoundation/decentjs-lib.git",
  "_id": "decentjs-lib@0.5.2",
  "_inCache": true,
  "_location": "/decentjs-lib",
  "_phantomChildren": {},
  "_requested": {
    "raw": "decentjs-lib@git+ssh://git@github.com/DECENTfoundation/decentjs-lib.git",
    "scope": null,
    "escapedName": "decentjs-lib",
    "name": "decentjs-lib",
    "rawSpec": "git+ssh://git@github.com/DECENTfoundation/decentjs-lib.git",
    "spec": "git+ssh://git@github.com/DECENTfoundation/decentjs-lib.git",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:DECENTfoundation/decentjs-lib.git",
      "sshUrl": "git+ssh://git@github.com/DECENTfoundation/decentjs-lib.git",
      "httpsUrl": "git+https://github.com/DECENTfoundation/decentjs-lib.git",
      "gitUrl": "git://github.com/DECENTfoundation/decentjs-lib.git",
      "shortcut": "github:DECENTfoundation/decentjs-lib",
      "directUrl": "https://raw.githubusercontent.com/DECENTfoundation/decentjs-lib/master/package.json"
    }
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "git+ssh://git@github.com/DECENTfoundation/decentjs-lib.git#7569d137d64a48f8c28488e49956668989df4b24",
  "_shasum": "3d9f7023394bfe5244a2aa996059603bb0a81037",
  "_shrinkwrap": null,
  "_spec": "decentjs-lib@git+ssh://git@github.com/DECENTfoundation/decentjs-lib.git",
  "_where": "/Users/admin/Documents/decentgo-frontend",
  "author": {
    "name": "Sigve Kvalsvik",
    "email": "bitsharesblocks@gmail.com",
    "url": "https://github.com/svk31"
  },
  "browser": {
    "ws": false,
    "crypto": false
  },
  "bugs": {
    "url": "https://github.com/svk31/decentjs-lib/issues"
  },
  "contributors": [
    {
      "name": "James Calfee",
      "email": "james@jcalfee.info",
      "url": "https://github.com/jcalfee/"
    },
    {
      "name": "Daniel Larimer",
      "email": "dan@cryptonomex.com",
      "url": "https://github.com/bytemaster/"
    },
    {
      "name": "Valentine Zavgorodnev",
      "email": "valentine.zavgorodnev@gmail.com",
      "url": "https://github.com/valzav/"
    }
  ],
  "dependencies": {
    "bigi": "^1.4.1",
    "bs58": "^3.0.0",
    "bytebuffer": "^5.0.0",
    "create-hash": "^1.1.2",
    "create-hmac": "^1.1.4",
    "crypto-js": "^3.1.9-1",
    "deep-equal": "^1.0.1",
    "ecurve": "^1.0.2",
    "event-emitter": "^0.3.4",
    "immutable": "^3.7.6",
    "secure-random": "^1.1.1"
  },
  "description": "Pure JavaScript DECENT library for node.js and browsers.",
  "devDependencies": {
    "assert": "^1.3.0",
    "babel-cli": "^6.18.0",
    "babel-core": "^6.21.0",
    "babel-eslint": "^7.1.1",
    "babel-plugin-add-module-exports": "^0.2.1",
    "babel-preset-es2015": "^6.18.0",
    "babel-preset-stage-1": "^6.16.0",
    "browserify": "^13.1.0",
    "esdoc": "^0.4.3",
    "mocha": "^3.2.0",
    "uglifyjs": "^2.4.10"
  },
  "engines": {
    "node": ">= 6.0.0"
  },
  "gitHead": "7569d137d64a48f8c28488e49956668989df4b24",
  "homepage": "https://github.com/svk31/decentjs-lib#readme",
  "jsnext:main": "./es/index.js",
  "license": "BSD-2-Clause-FreeBSD",
  "main": "./dist/index.js",
  "name": "decentjs-lib",
  "optionalDependencies": {},
  "readme": "# GrapheneJS (graphenejs-lib)\n\n## ATTN: If you're looking to use this with Bitshares, please [bitsharesjs](https://github.com/bitshares/bitsharesjs) instead.\n\nPure JavaScript Bitshares/Graphene library for node.js and browsers. Can be used to construct, sign and broadcast transactions in JavaScript, and to easily obtain data from the blockchain via public apis.\n\nMost of this code was written by [jcalfeee](https://github.com/jcalfee), my work was mostly just repackaging to a discrete npm package.\n\n[![npm version](https://img.shields.io/npm/v/graphenejs-lib.svg?style=flat-square)](https://www.npmjs.com/package/graphenejs-lib)\n[![npm downloads](https://img.shields.io/npm/dm/graphenejs-lib.svg?style=flat-square)](https://www.npmjs.com/package/graphenejs-lib)\n\n\n## Setup\n\nThis library can be obtained through npm:\n```\nnpm install graphenejs-lib\n```\n\n## Usage\n\nThree sub-libraries are included: `ECC`, `Chain` and `Serializer`. Generally only the `ECC` and `Chain` libraries need to be used directly.\n\n### Chain\nThis library provides utility functions to handle blockchain state as well as a login class that can be used for simple login functionality using a specific key seed.\n\n#### Login\nThe login class uses the following format for keys:\n\n```\nkeySeed = accountName + role + password\n```\n\nUsing this seed, private keys are generated for either the default roles `active, owner, memo`, or as specified. A minimum password length of 12 characters is enforced, but an even longer password is recommended. Three methods are provided:\n\n```\ngenerateKeys(account, password, [roles])\ncheckKeys(account, password, auths)\nsignTransaction(tr)\n```\n\nThe auths object should contain the auth arrays from the account object. An example is this:\n\n```\n{\n    active: [\n        [\"GPH5Abm5dCdy3hJ1C5ckXkqUH2Me7dXqi9Y7yjn9ACaiSJ9h8r8mL\", 1]\n    ]\n}\n```\n\nIf checkKeys is successful, you can use signTransaction to sign a TransactionBuilder transaction using the private keys for that account.\n\n#### State container\nThe Chain library contains a complete state container called the ChainStore. The ChainStore will automatically configure the `set_subscribe_callback` and handle any incoming state changes appropriately. It uses Immutable.js for storing the state, so all objects are return as immutable objects. It has its own `subscribe` method that can be used to register a callback that will be called whenever a state change happens.\n\nThe ChainStore has several useful methods to retrieve, among other things, objects, assets and accounts using either object ids or asset/account names. These methods are synchronous and will return `undefined` to indicate fetching in progress, and `null` to indicate that the object does not exist.\n\n```\nimport {Apis} from \"graphenejs-ws\";\nvar {ChainStore} = require(\"graphenejs-lib\");\n\nApis.instance(\"wss://bitshares.openledger.info/ws\", true).init_promise.then((res) => {\n    console.log(\"connected to:\", res[0].network);\n    ChainStore.init().then(() => {\n        ChainStore.subscribe(updateState);\n    });\n});\n\nlet dynamicGlobal = null;\nfunction updateState(object) {\n    dynamicGlobal = ChainStore.getObject(\"2.1.0\");\n    console.log(\"ChainStore object update\\n\", dynamicGlobal ? dynamicGlobal.toJS() : dynamicGlobal);\n}\n\n```\n\n### ECC\nThe ECC library contains all the crypto functions for private and public keys as well as transaction creation/signing.\n\n#### Private keys\nAs a quick example, here's how to generate a new private key from a seed (a brainkey for example):\n\n```\nvar {PrivateKey, key} = require(\"graphenejs-lib\");\n\nlet seed = \"THIS IS A TERRIBLE BRAINKEY SEED WORD SEQUENCE\";\nlet pkey = PrivateKey.fromSeed( key.normalize_brainKey(seed) );\n\nconsole.log(\"\\nPrivate key:\", pkey.toWif());\nconsole.log(\"Public key :\", pkey.toPublicKey().toString(), \"\\n\");\n```\n\n#### Transactions\nTODO transaction signing example\n\n## ESDoc (beta)\n```bash\nnpm i -g esdoc esdoc-es7-plugin\nesdoc -c ./esdoc.json\nopen out/esdoc/index.html\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/svk31/decentjs-lib.git"
  },
  "scripts": {
    "browserify": "browserify --full-paths dist/browser.js --standalone steemJS -o build/decentjs-lib.js -d",
    "build": "BABEL_ENV=cjs babel lib -d dist",
    "build-es": "BABEL_ENV=es babel lib -d es",
    "build:watch": "babel lib -d dist --watch",
    "clean": "rm -rf ./dist/* & rm -rf ./build/* & rm -rf ./es/*",
    "doc": "esdoc -c esdoc.json",
    "example:chainStore": "babel-node examples/chainStore",
    "example:privKey": "babel-node examples/privKey",
    "example:transfer": "babel-node examples/transfer",
    "postbrowserify": "uglifyjs --compress --mangle --sequences --drop_console --output build/decentjs-lib.min.js -- build/decentjs-lib.js",
    "postbuild": "npm run build-es",
    "prebrowserify": "rm -rf ./build/*",
    "prebuild": "npm run clean",
    "prepublish": "npm run build",
    "test": "BABEL_ENV=test mocha --compilers js:babel-register --recursive",
    "test:chain": "BABEL_ENV=test mocha --compilers js:babel-register ./test/chain --recursive",
    "test:ecc": "BABEL_ENV=test mocha --compilers js:babel-register ./test/ecc --recursive",
    "test:serializer": "BABEL_ENV=test mocha --compilers js:babel-register ./test/serializer --recursive",
    "test:watch": "npm test -- --watch"
  },
  "version": "0.5.2"
}
